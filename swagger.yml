openapi: '3.0.3'

info:
  title: Testbank API
  version: '2023.7'

  contact:
    name: Testbank
    url: https://www.testbank.dev

  license:
    name: MIT
    url: https://github.com/testbankhq/testbank/blob/main/LICENSE.md

servers:
  - description: Testbank API
    url: https://api.testbank.dev

components:

  securitySchemes:
    AuthToken:
      type: http
      scheme: bearer

  headers:
    Etag:
      description: Calculated hash of the response body
      schema:
        type: string
        description: Quoted MD5 string
        format: md5
        example: '"36c2723e9db88e9024393f96542924cf"'
    LastModified:
      description: When this resource was Last-Modified
      schema:
        type: string
        format: date-time-gmt-string
        example: Tue, 03 May 2022 10:00:00 GMT
    XRateLimitLimit:
      description: Total number of requests in this window.
      schema:
        type: integer
        example: 10
    XRateLimitRemaining:
      description: Number of requests remaining in this window.
      schema:
        type: integer
        example: 9
    XRateLimitUsed:
      description: Number of requests used in this window.
      schema:
        type: integer
        example: 1
    XRateLimitReset:
      description: The absolute time at which the current window resets in [UTC epoch seconds](https://en.wikipedia.org/wiki/Unix_time).
      schema:
        type: integer
        example: 1672531200

  parameters:
    UserAgentHeader:
      in: header
      name: User-Agent
      description: A relevant `User-Agent` for your request handler.
      required: true
      schema:
        type: string
        example: '@example/example@1.0.0 <support@example.com> (https://example.com)'
    IfNoneMatchHeader:
      in: header
      name: If-None-Match
      description: >
        `Etag` header from a previous response to this endpoint.
        If the calculated Etag hash of the current response body matches this value, then the API will return an empty
        `304 Not Modified` instead of the typical `200 OK`.
      schema:
        $ref: '#/components/headers/Etag/schema'
    IfModifiedSinceHeader:
      in: header
      name: If-Modified-Since
      description: >
        `Last-Modified` header from a previous response to this endpoint.
        If the Last Modified date of the current response body matches this value, then the API will return an empty
        `304 Not Modified` instead of the typical `200 OK`.
      schema:
        $ref: '#/components/headers/LastModified/schema'
    JsonApiPageCountQuery:
      in: query
      name: page[page]
      example: page[page]=1
      schema:
        type: integer
        default: 1
    JsonApiPageLimitQuery:
      in: query
      name: page[limit]
      example: page[limit]=100
      schema:
        type: integer
        default: 100
    AccountIdPath:
      in: path
      name: accountId
      description: Account ID
      required: true
      schema:
        type: string
        example: a1b2c3d4e5
    TransactionIdPath:
      in: path
      name: transactionId
      description: Transaction ID
      required: true
      schema:
        type: string
        example: c3d4e5f6h7

  responses:
    ErrDefault:
      description: An error occurred
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                description: An array of errors
                minLength: 1
                items:
                  $ref: '#/components/schemas/JsonApiResourceError'
            required:
              - errors
            example:
              errors:
                - title: An error occurred
                  detail: An error occurred processing your request.
                  status: 500

    ErrNotAuthenticated:
      description: The request is not authenticated
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/JsonApiResourceError'
            required:
              - errors
            example:
              errors:
                - title: Not authenticated
                  detail: You are not authenticated to perform this action.
                  code: NOT_AUTHENTICATED
                  status: 401

    ErrForbidden:
      description: >
        The request is authenticated but not authorised to perform this action - likely due to a invalid/incorrect
        role/relationship to the resource, or due to read/writing properties in the resource that this request is not
        allowed to read/write.
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/JsonApiResourceError'
            required:
              - errors
            example:
              errors:
                - title: Not authorized
                  detail: You are not authorized to perform this action.
                  code: NOT_AUTHORIZED
                  status: 403

    ErrNotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/JsonApiResourceError'
            required:
              - errors
            example:
              errors:
                - title: Resource not found
                  detail: Resource not found.
                  code: RESOURCE_NOT_FOUND
                  status: 404

  schemas:

    JsonApiResourceMeta:
      type: object
      description: A JSON:API-formatted object detailing meta information.
      additionalProperties:
        oneOf:
          - type: string
          - type: number
          - type: boolean

    JsonApiResourceLinks:
      type: object
      description: >
        A JSON:API-formatted object detailing further links. These links could be further API queries, or links to
        relevant external sites/pages that are relevant to the resource.
      additionalProperties:
        oneOf:
          - type: string
            format: uri
            example: https://testbank.dev/#link-to-somewhere
          - type: object
            properties:
              href:
                type: string
                format: uri
                example: https://testbank.dev/#link-to-somewhere
              title:
                type: string
              type:
                type: string
              meta: # Odd, $ref struggles here
                type: object
                description: A JSON:API-formatted object detailing meta information.
                additionalProperties:
                  oneOf:
                    - type: string
                    - type: number
                    - type: boolean
            required:
              - href

    JsonApiResourceError:
      type: object
      description: A JSON:API-formatted error object
      properties:
        title:
          type: string
          description: A short, human-readable summary of the problem.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        status:
          type: string
          format: http-status-code
          description: The HTTP status code applicable to this problem, expressed as a string value.
        code:
          type: string
          description: An application-specific error code.
        links:
          $ref: '#/components/schemas/JsonApiResourceLinks'
        meta:
          $ref: '#/components/schemas/JsonApiResourceMeta'
        source:
          type: object
          description: An object containing references to the primary source of the error.
          properties:
            pointer:
              type: string
              description: A pointer/reference to the value in the request query/body that caused the error.
            parameter:
              type: string
              description: A string indicating which request  query parameter caused the error.
            header:
              type: string
              description: A string indicating which request header caused the error.
      required:
        - detail

    JsonApiPrimaryDataPaginationLinks:
      type: object
      description: A JSON:API-formatted object detailing further links, including pagination.
      properties:
        prev:
          type: string
          format: uri
          description: An absolute URL to the previous page of results, `null` if there is no previous page.
        next:
          type: string
          format: uri
          description: An absolute URL to the next page of results, `null` if there is no next page.
        first:
          type: string
          format: uri
          description: An absolute URL to the first page of results, `null` if there is only 1 page.
        last:
          type: string
          format: uri
          description: An absolute URL to the last page of results, `null` if there is only 1 page.
      additionalProperties:
        $ref: '#/components/schemas/JsonApiResourceLinks/additionalProperties'
      required:
        - prev
        - next
        - first
        - last

    Account:
      type: object
      title: AccountResource
      properties:
        type:
          type: string
          enum: [accounts]
        id:
          type: string
          example: a1b2c3d4e5
          readOnly: true
        attributes:
          type: object
          properties:
            name:
              type: string
              example: My Account
            currencyCode:
              type: string
              format: money-currency
              example: USD
            visibility:
              type: string
              enum: [PUBLIC, UNLISTED, PRIVATE]
              default: UNLISTED
              example: PUBLIC
          required:
            - name
            - currencyCode
        meta:
          type: object
          properties:
            externalId:
              type: string
              example: cb8ff63f-cb92-4328-b3c7-b54e2b6dbc5f
            balanceTotal:
              type: string
              example: '0.00'
              readOnly: true
            createdAt:
              type: string
              format: date-time
              example: '2023-07-12T19:00:00.000Z'
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              example: '2023-07-12T19:00:00.000Z'
              readOnly: true
          required:
            - balanceTotal
            - createdAt
            - updatedAt
      required:
        - type
        - id
        - attributes
        - meta

    Transaction:
      type: object
      title: TransactionResource
      properties:
        type:
          type: string
          enum: [transactions]
        id:
          type: string
          example: c3d4e5f6g7
          readOnly: true
        attributes:
          type: object
          properties:
            amount:
              type: string
              format: money-value
              example: '100.00'
            reference:
              type: string
          required:
            - amount
            - reference
        relationships:
          type: object
          properties:
            sender:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      $ref: '#/components/schemas/Account/properties/type'
                    id:
                      type: string
                      example: a1b2c3d4e5
                  required:
                    - type
                    - id
              required:
                - data
            recipient:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      $ref: '#/components/schemas/Account/properties/type'
                    id:
                      type: string
                      example: a1b2c3d4e5
                  required:
                    - type
                    - id
              required:
                - data
          required:
            - amount
            - reference
        meta:
          type: object
          properties:
            exchangeRate:
              type: number
              readOnly: true
              example: 1
            createdAt:
              type: string
              format: date-time
              readOnly: true
              example: '2023-07-12T19:00:00.000Z'
          required:
            - createdAt
      required:
        - type
        - id
        - attributes

security:
  - AuthToken: []

tags:
  - name: Tenants
  - name: Accounts
  - name: Transactions
  - name: Static

paths:

  /:
    get:
      summary: Check Authentication
      operationId: ping
      security: []
      tags: [Tenants]
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      name:
                        type: string
                        description: '"Testbank API"'
                        example:
                          $ref: '#/info/title'
                      version:
                        type: string
                        description: The current API version, in the format `{year}.{month}(.{patch})?`
                        example:
                          $ref: '#/info/version'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: https://api.testbank.dev/
                      github:
                        type: string
                        example: https://github.com/testbankhq
        500:
          $ref: '#/components/responses/ErrDefault'

  /accounts:
    get:
      summary: List accounts
      operationId: listAccounts
      tags: [Accounts]
      parameters:
        - $ref: '#/components/parameters/JsonApiPageCountQuery'
        - $ref: '#/components/parameters/JsonApiPageLimitQuery'
      responses:
        200:
          description: List of Accounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  meta:
                    $ref: '#/components/schemas/JsonApiPrimaryDataPaginationLinks'
                required:
                  - data
                  - meta
        500:
          $ref: '#/components/responses/ErrDefault'
    post:
      summary: Create account
      operationId: createAccount
      description: >
        Create a new account, with a specific name & currency code. Optionally attach an external ID so you can track
        this account in your integration. Optionally include an initial balance transaction to seed the account with
        funds immediately.
      tags: [Accounts]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      $ref: '#/components/schemas/Account/properties/type'
                    attributes:
                      $ref: '#/components/schemas/Account/properties/attributes'
                    relationships:
                      type: object
                      properties:
                        initialBalance:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  $ref: '#/components/schemas/Transaction/properties/type'
                                attributes:
                                  $ref: '#/components/schemas/Transaction/properties/attributes'
                              required:
                                - type
                                - attributes
                          required:
                            - data
                    meta:
                      $ref: '#/components/schemas/Account/properties/meta'
                  required:
                    - type
                    - attributes
              required:
                - data
      responses:
        200:
          description: Created account
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        $ref: '#/components/schemas/Account/properties/type'
                      id:
                        $ref: '#/components/schemas/Account/properties/id'
                      attributes:
                        $ref: '#/components/schemas/Account/properties/attributes'
                      relationships:
                        type: object
                        properties:
                          initialTransaction:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    $ref: '#/components/schemas/Transaction/properties/type'
                                  id:
                                    $ref: '#/components/schemas/Transaction/properties/id'
                                required:
                                  - type
                                  - id
                            required:
                              - data
                      meta:
                        $ref: '#/components/schemas/Account/properties/meta'
                    required:
                      - type
                      - id
                      - attributes
                      - meta
                required:
                  - data
        500:
          $ref: '#/components/responses/ErrDefault'
  /accounts/{accountId}:
    parameters:
      - $ref: '#/components/parameters/AccountIdPath'
    get:
      summary: Get account by ID
      operationId: getAccount
      tags: [Accounts]
      responses:
        200:
          description: Found account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
                required:
                  - data
        500:
          $ref: '#/components/responses/ErrDefault'
    patch:
      summary: Update account
      operationId: updateAccount
      tags: [Accounts]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Account'
              required:
                - data
      responses:
        200:
          description: Updated account
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
                required:
                  - data
        500:
          $ref: '#/components/responses/ErrDefault'
    delete:
      summary: Delete account
      operationId: deleteAccount
      tags: [Accounts]
      responses:
        204:
          description: Confirmation the account is deleted.
        500:
          $ref: '#/components/responses/ErrDefault'

  /transactions:
    get:
      summary: List transactions
      operationId: listTransactions
      tags: [Transactions]
      parameters:
        - $ref: '#/components/parameters/JsonApiPageCountQuery'
        - $ref: '#/components/parameters/JsonApiPageLimitQuery'
      responses:
        200:
          description: List of Transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
                  meta:
                    $ref: '#/components/schemas/JsonApiPrimaryDataPaginationLinks'
                required:
                  - data
                  - meta
        500:
          $ref: '#/components/responses/ErrDefault'
    post:
      summary: Create transaction
      operationId: createTransaction
      tags: [Transactions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Transaction'
              required:
                - data
      responses:
        200:
          description: Created transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction'
                required:
                  - data
        500:
          $ref: '#/components/responses/ErrDefault'
  /transactions/{transactionId}:
    parameters:
      - $ref: '#/components/parameters/TransactionIdPath'
    get:
      summary: Get transaction by ID
      operationId: getTransaction
      tags: [Transactions]
      responses:
        200:
          description: Found transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction'
                required:
                  - data
        500:
          $ref: '#/components/responses/ErrDefault'
    patch:
      summary: Update transaction
      operationId: updateTransaction
      tags: [Transactions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Transaction'
              required:
                - data
      responses:
        200:
          description: Updated transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Transaction'
                required:
                  - data
        500:
          $ref: '#/components/responses/ErrDefault'
    delete:
      summary: Delete transaction
      operationId: deleteTransaction
      tags: [Transactions]
      responses:
        204:
          description: Confirmation the transaction is deleted.
        500:
          $ref: '#/components/responses/ErrDefault'

  /currencies:
    get:
      summary: Get Currencies
      operationId: getCurrencies
      security: []
      tags: [Static]
      responses:
        200:
          description: List of currency codes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Currency
                      properties:
                        code:
                          type: string
                          example: USD
                        icon:
                          type: string
                          example: 🇺🇸
                        name:
                          type: string
                          example: United States Dollar
                        rate:
                          type: number
                          example: 1
                      required:
                        - code
                        - name
              example:
                data:
                  - code: USD
                    name: United States Dollar
                    icon: 🇺🇸
                    rate: 1
                  - code: GBP
                    name: Great British Pound
                    icon: 🇬🇧
                    rate: 0.763487
        500:
          $ref: '#/components/responses/ErrDefault'
